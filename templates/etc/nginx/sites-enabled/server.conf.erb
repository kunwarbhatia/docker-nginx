<% if ENV['UPSTREAM_SERVERS'] %>
upstream containers {
  <% (ENV['UPSTREAM_SERVERS']).split(',').each do |server| %>
  server <%= server %>;
  <% end %>
}
<% end %>

<% if ENV['ACME_SERVER'] %>
upstream acme {
  server <%= ENV['ACME_SERVER'] %>;
}
<% end %>

server {
  <% if ENV['PROXY_PROTOCOL'] == 'true' %>
  listen 80 proxy_protocol;

  set_real_ip_from 0.0.0.0/0;
  real_ip_header proxy_protocol;

  access_log /proc/self/fd/1 proxy_log;
  <% else %>
  listen 80;
  <% end %>

  <% if ENV['KEEPALIVE_TIMEOUT'] %>
  keepalive_timeout <%= ENV['KEEPALIVE_TIMEOUT'] %>;
  <% else %>
  keepalive_timeout 5;
  <% end %>

  error_page 502 503 504 /50x.html;
  location /50x.html {
  }

  <% if ENV['ACME_SERVER'] %>
  location /.well-known/acme-challenge {
    proxy_pass http://acme;
  }
  <% end %>

  include /etc/nginx/partial/health.conf;

  location / {
    <% if ENV['ACME_PENDING'] == 'true' %>
    rewrite ^ /acme-pending.html break;
    root /html;
    <% else %>

    <% if ENV['FORCE_SSL'] == 'true' %>
    return 301 https://$host$request_uri;
    <% end %>

    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Request-Start "t=${msec}";
    proxy_set_header Proxy "";
    proxy_redirect off;

    <% if ENV['UPSTREAM_SERVERS'] %>
    proxy_pass http://containers;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    <% end %>
    break;
    <% end %>
  }
}

server {
  <% if ENV['PROXY_PROTOCOL'] == 'true' %>
  listen 443 proxy_protocol;

  set_real_ip_from 0.0.0.0/0;
  real_ip_header proxy_protocol;

  access_log /proc/self/fd/1 proxy_log;
  <% else %>
  listen 443;
  <% end %>

  ssl on;
  ssl_certificate /etc/nginx/ssl/server.crt;
  ssl_certificate_key /etc/nginx/ssl/server.key;

  <% if ENV['ACME_READY'] == 'true' %>
  ssl_stapling on;
  resolver 8.8.8.8 8.8.4.4;
  <% end %>

  keepalive_timeout 5;

  error_page 502 503 504 /50x.html;
  location /50x.html {
  }

  <% if ENV['FORCE_SSL'] == 'true' %>
  add_header Strict-Transport-Security max-age=<%= ENV['HSTS_MAX_AGE'] || 31536000 %>;
  <% end %>

  include /etc/nginx/partial/health.conf;

  location / {
    <% if ENV['ACME_PENDING'] %>
    rewrite ^ /acme-pending.html break;
    root /html;
    <% else %>

    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Request-Start "t=${msec}";
    proxy_set_header Proxy "";
    proxy_redirect off;

    <% if ENV['UPSTREAM_SERVERS'] %>
    proxy_pass http://containers;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    <% end %>
    break;
    <% end %>
  }
}

<% if ENV['UPSTREAM_SERVERS'] %>
server {
  listen 9000;

  access_log /proc/self/fd/1 proxy_log;

  location = / {
    default_type 'text/plain';

    <% if ENV['FORCE_HEALTHCHECK_SUCCESS'] == 'true' %>
    return 200 "";
    <% else %>
    content_by_lua_block {
      local r = ngx.location.capture("/healthcheck");
      if r.status == 502 then
        ngx.status = 502;
      else
        ngx.status = 200;
      end
    }
    <% end %>
  }

  location = /healthcheck {
    internal;

    proxy_method GET;
    proxy_pass_request_headers off;
    proxy_pass_request_body off;
    proxy_set_header User-Agent "Aptible Health Check";

    proxy_pass http://containers;
  }

  location / {
    # Send all requests to /
    rewrite ^.*$ / last;
  }

}
<% end %>
